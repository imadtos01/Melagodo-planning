import streamlit as st
import pandas as pd
from planning_core import generate_planning

st.set_page_config(page_title="Planning Restaurant", layout="wide")

st.title("üìÖ G√©n√©rateur de planning pour restaurant")

# 1Ô∏è‚É£ T√©l√©verser un fichier de besoins
uploaded_file = st.file_uploader("1Ô∏è‚É£ Charger le fichier de besoins (Excel)", type=["xlsx"])

if uploaded_file:
    besoins_df = pd.read_excel(uploaded_file)
    st.success("‚úÖ Fichier charg√© avec succ√®s.")
else:
    # Exemple de tableau par d√©faut
    besoins_df = pd.DataFrame({
        "Jour": ["Lundi", "Mardi", "Mercredi", "Jeudi", "Vendredi", "Samedi", "Dimanche"],
        **{f"{h}:00": [1]*7 for h in range(10, 24)}  # Besoins de 10h √† 23h
    })
    st.info("‚ÑπÔ∏è Aucun fichier import√©, mod√®le par d√©faut utilis√©.")

# 2Ô∏è‚É£ Modifier les besoins horaires
st.subheader("2Ô∏è‚É£ Modifier les besoins horaires")
editable_df = st.data_editor(besoins_df, num_rows="dynamic", use_container_width=True)

# 3Ô∏è‚É£ Nombre d‚Äôemploy√©s disponibles
st.subheader("3Ô∏è‚É£ Nombre d‚Äôemploy√©s disponibles")
num_workers = st.slider("S√©lectionner le nombre d'employ√©s", min_value=1, max_value=20, value=6)

# 4Ô∏è‚É£ G√©n√©rer le planning
if st.button("4Ô∏è‚É£ G√©n√©rer le planning"):
    with st.spinner("‚è≥ G√©n√©ration du planning..."):
        try:
            # Cr√©er le dictionnaire des besoins
            weekly_chef_need = {}
            for _, row in editable_df.iterrows():
                jour = row["Jour"]
                heures = [int(row[f"{h}:00"]) for h in range(10, 24)]
                weekly_chef_need[jour] = heures

            # G√©n√©rer le planning
            output_path = generate_planning(num_workers, weekly_chef_need)

            st.success("‚úÖ Planning g√©n√©r√© avec succ√®s.")
            with open(output_path, "rb") as file:
                st.download_button("üì• T√©l√©charger le planning Excel", data=file, file_name="planning.xlsx")

        except Exception as e:
            st.error(f"‚ùå Erreur : {e}")
